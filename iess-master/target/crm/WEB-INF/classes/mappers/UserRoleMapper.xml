<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxx.crm.dao.UserRoleMapper" >

<!--  <cache type="com.xxx.crm.cache.RedisCache"/>-->

  <resultMap id="BaseResultMap" type="com.xxx.crm.entity.UserRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, role_id, create_date, update_date
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user_role
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.xxx.crm.entity.UserRole" >
    insert into t_user_role (id, user_id, role_id, 
      create_date, update_date)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.xxx.crm.entity.UserRole" >
    insert into t_user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.xxx.crm.entity.UserRole" >
    update t_user_role
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.xxx.crm.entity.UserRole" >
    update t_user_role
    set user_id = #{userId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!-- 自定义接口方法 -->

  <!-- 根据用户ID查询用户是否具有角色记录 -->
  <select id="countUserRoleByUserId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    SELECT
      COUNT(1)
    FROM
      `t_user_role`
    WHERE
      user_id = #{userId}
  </select>

  <!-- 删除指定用户的用户角色记录 -->
  <delete id="deleteUserRoleByUserId" parameterType="int[]">
    DELETE FROM
      `t_user_role`
    WHERE
      user_id = #{userId}
  </delete>

  <!-- 批量插入用户角色记录 -->
  <insert id="insertBatch" parameterType="list">
    INSERT INTO t_user_role
      (user_id, role_id, create_date, update_date)
    VALUES
    <foreach collection="list"  separator="," item="userRole">
        (#{userRole.userId,jdbcType=INTEGER},
        #{userRole.roleId,jdbcType=INTEGER},
        #{userRole.createDate,jdbcType=TIMESTAMP},
        #{userRole.updateDate,jdbcType=TIMESTAMP})
    </foreach>
  </insert>

</mapper>